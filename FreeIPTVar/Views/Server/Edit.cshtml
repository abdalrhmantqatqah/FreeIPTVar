@model FreeIPTVar.Models.ServerModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Server", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ServerModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ServerID)

        <div class="form-group">
            @Html.LabelFor(model => model.ServerTitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ServerTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ServerTitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ServerLink, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ServerLink, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ServerLink, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ServerImage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <img width="150" height="150" style="margin:10px" src="@Url.Content("~/Content/img/" + Model.ServerImage +"")" />

                @Html.TextBoxFor(m => m.ServerImage, new { type = "file" })
                @Html.EditorFor(model => model.ServerImage, new { htmlAttributes = new { @class = "form-control hidden" } })
                @Html.ValidationMessageFor(model => model.ServerImage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ServerDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.ServerDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ServerDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    List<SelectListItem> MyList = new List<SelectListItem>();//Empty List
                    SelectListItem Category = new SelectListItem();//One Empty Object

                    foreach (var row in Model.Categories)
                    {
                        Category = new SelectListItem();
                        Category.Text = row.CategoryName;
                        Category.Value = row.CategoryID + "";
                        //Category.Value = Convert.ToString( row.CategoryID) ;

                        MyList.Add(Category);
                    }

                    @Html.DropDownList("CategoryID", MyList, "Selcet Category");
                }
                @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })

            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
